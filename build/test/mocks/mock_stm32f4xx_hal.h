/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STM32F4XX_HAL_H
#define _MOCK_STM32F4XX_HAL_H

#include "stm32f4xx_hal.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic push
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_stm32f4xx_hal_Init(void);
void mock_stm32f4xx_hal_Destroy(void);
void mock_stm32f4xx_hal_Verify(void);




#define HAL_Init_IgnoreAndReturn(cmock_retval) HAL_Init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_Init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_Init_ExpectAndReturn(cmock_retval) HAL_Init_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_Init_CALLBACK)(int cmock_num_calls);
void HAL_Init_StubWithCallback(CMOCK_HAL_Init_CALLBACK Callback);
#define HAL_DeInit_IgnoreAndReturn(cmock_retval) HAL_DeInit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_DeInit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_DeInit_ExpectAndReturn(cmock_retval) HAL_DeInit_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_DeInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_DeInit_CALLBACK)(int cmock_num_calls);
void HAL_DeInit_StubWithCallback(CMOCK_HAL_DeInit_CALLBACK Callback);
#define HAL_MspInit_Ignore() HAL_MspInit_CMockIgnore()
void HAL_MspInit_CMockIgnore(void);
#define HAL_MspInit_Expect() HAL_MspInit_CMockExpect(__LINE__)
void HAL_MspInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_MspInit_CALLBACK)(int cmock_num_calls);
void HAL_MspInit_StubWithCallback(CMOCK_HAL_MspInit_CALLBACK Callback);
#define HAL_MspDeInit_Ignore() HAL_MspDeInit_CMockIgnore()
void HAL_MspDeInit_CMockIgnore(void);
#define HAL_MspDeInit_Expect() HAL_MspDeInit_CMockExpect(__LINE__)
void HAL_MspDeInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_MspDeInit_CALLBACK)(int cmock_num_calls);
void HAL_MspDeInit_StubWithCallback(CMOCK_HAL_MspDeInit_CALLBACK Callback);
#define HAL_InitTick_IgnoreAndReturn(cmock_retval) HAL_InitTick_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_InitTick_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_InitTick_ExpectAndReturn(TickPriority, cmock_retval) HAL_InitTick_CMockExpectAndReturn(__LINE__, TickPriority, cmock_retval)
void HAL_InitTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t TickPriority, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_InitTick_CALLBACK)(uint32_t TickPriority, int cmock_num_calls);
void HAL_InitTick_StubWithCallback(CMOCK_HAL_InitTick_CALLBACK Callback);
#define HAL_IncTick_Ignore() HAL_IncTick_CMockIgnore()
void HAL_IncTick_CMockIgnore(void);
#define HAL_IncTick_Expect() HAL_IncTick_CMockExpect(__LINE__)
void HAL_IncTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_IncTick_CALLBACK)(int cmock_num_calls);
void HAL_IncTick_StubWithCallback(CMOCK_HAL_IncTick_CALLBACK Callback);
#define HAL_Delay_Ignore() HAL_Delay_CMockIgnore()
void HAL_Delay_CMockIgnore(void);
#define HAL_Delay_Expect(Delay) HAL_Delay_CMockExpect(__LINE__, Delay)
void HAL_Delay_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Delay);
typedef void (* CMOCK_HAL_Delay_CALLBACK)(uint32_t Delay, int cmock_num_calls);
void HAL_Delay_StubWithCallback(CMOCK_HAL_Delay_CALLBACK Callback);
#define HAL_GetTick_IgnoreAndReturn(cmock_retval) HAL_GetTick_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetTick_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetTick_ExpectAndReturn(cmock_retval) HAL_GetTick_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetTick_CALLBACK)(int cmock_num_calls);
void HAL_GetTick_StubWithCallback(CMOCK_HAL_GetTick_CALLBACK Callback);
#define HAL_GetTickPrio_IgnoreAndReturn(cmock_retval) HAL_GetTickPrio_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetTickPrio_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetTickPrio_ExpectAndReturn(cmock_retval) HAL_GetTickPrio_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTickPrio_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetTickPrio_CALLBACK)(int cmock_num_calls);
void HAL_GetTickPrio_StubWithCallback(CMOCK_HAL_GetTickPrio_CALLBACK Callback);
#define HAL_SetTickFreq_IgnoreAndReturn(cmock_retval) HAL_SetTickFreq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_SetTickFreq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_SetTickFreq_ExpectAndReturn(Freq, cmock_retval) HAL_SetTickFreq_CMockExpectAndReturn(__LINE__, Freq, cmock_retval)
void HAL_SetTickFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_TickFreqTypeDef Freq, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_SetTickFreq_CALLBACK)(HAL_TickFreqTypeDef Freq, int cmock_num_calls);
void HAL_SetTickFreq_StubWithCallback(CMOCK_HAL_SetTickFreq_CALLBACK Callback);
#define HAL_GetTickFreq_IgnoreAndReturn(cmock_retval) HAL_GetTickFreq_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetTickFreq_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_TickFreqTypeDef cmock_to_return);
#define HAL_GetTickFreq_ExpectAndReturn(cmock_retval) HAL_GetTickFreq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTickFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_TickFreqTypeDef cmock_to_return);
typedef HAL_TickFreqTypeDef (* CMOCK_HAL_GetTickFreq_CALLBACK)(int cmock_num_calls);
void HAL_GetTickFreq_StubWithCallback(CMOCK_HAL_GetTickFreq_CALLBACK Callback);
#define HAL_SuspendTick_Ignore() HAL_SuspendTick_CMockIgnore()
void HAL_SuspendTick_CMockIgnore(void);
#define HAL_SuspendTick_Expect() HAL_SuspendTick_CMockExpect(__LINE__)
void HAL_SuspendTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_SuspendTick_CALLBACK)(int cmock_num_calls);
void HAL_SuspendTick_StubWithCallback(CMOCK_HAL_SuspendTick_CALLBACK Callback);
#define HAL_ResumeTick_Ignore() HAL_ResumeTick_CMockIgnore()
void HAL_ResumeTick_CMockIgnore(void);
#define HAL_ResumeTick_Expect() HAL_ResumeTick_CMockExpect(__LINE__)
void HAL_ResumeTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_ResumeTick_CALLBACK)(int cmock_num_calls);
void HAL_ResumeTick_StubWithCallback(CMOCK_HAL_ResumeTick_CALLBACK Callback);
#define HAL_GetHalVersion_IgnoreAndReturn(cmock_retval) HAL_GetHalVersion_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetHalVersion_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetHalVersion_ExpectAndReturn(cmock_retval) HAL_GetHalVersion_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetHalVersion_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetHalVersion_CALLBACK)(int cmock_num_calls);
void HAL_GetHalVersion_StubWithCallback(CMOCK_HAL_GetHalVersion_CALLBACK Callback);
#define HAL_GetREVID_IgnoreAndReturn(cmock_retval) HAL_GetREVID_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetREVID_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetREVID_ExpectAndReturn(cmock_retval) HAL_GetREVID_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetREVID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetREVID_CALLBACK)(int cmock_num_calls);
void HAL_GetREVID_StubWithCallback(CMOCK_HAL_GetREVID_CALLBACK Callback);
#define HAL_GetDEVID_IgnoreAndReturn(cmock_retval) HAL_GetDEVID_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_GetDEVID_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetDEVID_ExpectAndReturn(cmock_retval) HAL_GetDEVID_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetDEVID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_HAL_GetDEVID_CALLBACK)(int cmock_num_calls);
void HAL_GetDEVID_StubWithCallback(CMOCK_HAL_GetDEVID_CALLBACK Callback);
#define HAL_DBGMCU_EnableDBGSleepMode_Ignore() HAL_DBGMCU_EnableDBGSleepMode_CMockIgnore()
void HAL_DBGMCU_EnableDBGSleepMode_CMockIgnore(void);
#define HAL_DBGMCU_EnableDBGSleepMode_Expect() HAL_DBGMCU_EnableDBGSleepMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGSleepMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_EnableDBGSleepMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_EnableDBGSleepMode_StubWithCallback(CMOCK_HAL_DBGMCU_EnableDBGSleepMode_CALLBACK Callback);
#define HAL_DBGMCU_DisableDBGSleepMode_Ignore() HAL_DBGMCU_DisableDBGSleepMode_CMockIgnore()
void HAL_DBGMCU_DisableDBGSleepMode_CMockIgnore(void);
#define HAL_DBGMCU_DisableDBGSleepMode_Expect() HAL_DBGMCU_DisableDBGSleepMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGSleepMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_DisableDBGSleepMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_DisableDBGSleepMode_StubWithCallback(CMOCK_HAL_DBGMCU_DisableDBGSleepMode_CALLBACK Callback);
#define HAL_DBGMCU_EnableDBGStopMode_Ignore() HAL_DBGMCU_EnableDBGStopMode_CMockIgnore()
void HAL_DBGMCU_EnableDBGStopMode_CMockIgnore(void);
#define HAL_DBGMCU_EnableDBGStopMode_Expect() HAL_DBGMCU_EnableDBGStopMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGStopMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_EnableDBGStopMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_EnableDBGStopMode_StubWithCallback(CMOCK_HAL_DBGMCU_EnableDBGStopMode_CALLBACK Callback);
#define HAL_DBGMCU_DisableDBGStopMode_Ignore() HAL_DBGMCU_DisableDBGStopMode_CMockIgnore()
void HAL_DBGMCU_DisableDBGStopMode_CMockIgnore(void);
#define HAL_DBGMCU_DisableDBGStopMode_Expect() HAL_DBGMCU_DisableDBGStopMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGStopMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_DisableDBGStopMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_DisableDBGStopMode_StubWithCallback(CMOCK_HAL_DBGMCU_DisableDBGStopMode_CALLBACK Callback);
#define HAL_DBGMCU_EnableDBGStandbyMode_Ignore() HAL_DBGMCU_EnableDBGStandbyMode_CMockIgnore()
void HAL_DBGMCU_EnableDBGStandbyMode_CMockIgnore(void);
#define HAL_DBGMCU_EnableDBGStandbyMode_Expect() HAL_DBGMCU_EnableDBGStandbyMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGStandbyMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_EnableDBGStandbyMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_EnableDBGStandbyMode_StubWithCallback(CMOCK_HAL_DBGMCU_EnableDBGStandbyMode_CALLBACK Callback);
#define HAL_DBGMCU_DisableDBGStandbyMode_Ignore() HAL_DBGMCU_DisableDBGStandbyMode_CMockIgnore()
void HAL_DBGMCU_DisableDBGStandbyMode_CMockIgnore(void);
#define HAL_DBGMCU_DisableDBGStandbyMode_Expect() HAL_DBGMCU_DisableDBGStandbyMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGStandbyMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DBGMCU_DisableDBGStandbyMode_CALLBACK)(int cmock_num_calls);
void HAL_DBGMCU_DisableDBGStandbyMode_StubWithCallback(CMOCK_HAL_DBGMCU_DisableDBGStandbyMode_CALLBACK Callback);
#define HAL_EnableCompensationCell_Ignore() HAL_EnableCompensationCell_CMockIgnore()
void HAL_EnableCompensationCell_CMockIgnore(void);
#define HAL_EnableCompensationCell_Expect() HAL_EnableCompensationCell_CMockExpect(__LINE__)
void HAL_EnableCompensationCell_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_EnableCompensationCell_CALLBACK)(int cmock_num_calls);
void HAL_EnableCompensationCell_StubWithCallback(CMOCK_HAL_EnableCompensationCell_CALLBACK Callback);
#define HAL_DisableCompensationCell_Ignore() HAL_DisableCompensationCell_CMockIgnore()
void HAL_DisableCompensationCell_CMockIgnore(void);
#define HAL_DisableCompensationCell_Expect() HAL_DisableCompensationCell_CMockExpect(__LINE__)
void HAL_DisableCompensationCell_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_DisableCompensationCell_CALLBACK)(int cmock_num_calls);
void HAL_DisableCompensationCell_StubWithCallback(CMOCK_HAL_DisableCompensationCell_CALLBACK Callback);
#define HAL_GetUID_Ignore() HAL_GetUID_CMockIgnore()
void HAL_GetUID_CMockIgnore(void);
#define HAL_GetUID_Expect(UID) HAL_GetUID_CMockExpect(__LINE__, UID)
void HAL_GetUID_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t* UID);
typedef void (* CMOCK_HAL_GetUID_CALLBACK)(uint32_t* UID, int cmock_num_calls);
void HAL_GetUID_StubWithCallback(CMOCK_HAL_GetUID_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic pop
#endif

#endif
